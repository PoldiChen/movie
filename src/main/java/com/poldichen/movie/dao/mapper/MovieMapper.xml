<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.poldichen.movie.dao.IMovieDao">


    <resultMap type="com.poldichen.movie.entity.Movie" id="movieMap">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="publishDate" column="publish_date"/>
        <result property="createAt" column="create_at" />
        <result property="updateAt" column="update_at" />

        <collection property="actors" ofType="com.poldichen.movie.entity.Actor">
            <id property="id" column="actor_id"/>
            <result property="name" column="actor_name"/>
        </collection>

        <collection property="videos" ofType="com.poldichen.movie.entity.Video">
            <id property="id" column="video_id"/>
            <result property="name" column="video_name"/>
        </collection>

    </resultMap>

    <select id="getAll" resultMap="movieMap">

        SELECT m.id, m.name, m.publish_date, v.id as video_id, v.name as video_name, a.id as actor_id, a.name as actor_name
        FROM movie m left join movie_video mv on m.id = mv.movie_id
        left join movie_actor ac on m.id = ac.movie_id
        left join actor a on a.id = ac.actor_id
        left join video v on mv.video_id = v.id

    </select>

    <select id="getByName" resultMap="movieMap">

        SELECT m.id, m.name, m.publish_date, v.id as video_id, v.name as video_name, a.id as actor_id, a.name as actor_name
        FROM movie m left join movie_video mv on m.id = mv.movie_id
        left join movie_actor ac on m.id = ac.movie_id
        left join actor a on a.id = ac.actor_id
        left join video v on mv.video_id = v.id
        where m.name like concat('%', #{movieName}, '%')
    </select>

    <select id="getById" resultMap="movieMap">
        SELECT m.id, m.name, v.id as video_id, v.name as video_name
        FROM movie m left join movie_video mv on m.id = mv.movie_id
        left join video v on mv.video_id = v.id
        where m.id = #{id}
    </select>

    <insert id="createOne" parameterType="com.poldichen.movie.entity.Movie" useGeneratedKeys="true" keyProperty="movie.id">
        insert into movie (name, publish_date, create_at, update_at)
        values (#{movie.name}, #{movie.publishDate}, NOW(), NOW())
    </insert>

    <update id="update">
        update movie
        set name = #{movie.name}, publish_date = #{movie.publishDate}, update_at = NOW()
        where id = #{id}
    </update>

    <delete id="deleteMovieActor">
        delete from movie_actor where movie_id = #{movie_id}
    </delete>

    <insert id="addMovieActor" parameterType="int" useGeneratedKeys="true" keyProperty="movie.id">
        insert into movie_actor (movie_id, actor_id)
        values (#{movie_id}, #{actor_id})
    </insert>




</mapper>